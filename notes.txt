mapping (address => uint)

public contract methods
================
constructor payable
createJob(totalWorkRequired)
contribute(address, numberOfWorks)

contract notes
===============
may be a good idea to separate the logic of paying workers
making a splitter contract that saves off worker's balances and requires them to get them would be good, but it means that workers would need existing funds to send the transaction getting those wages


public rest endpoints
===============
GET /job
    -returns {seed, controller, jobId}
GET /jobBytecode/{jobId}
    -returns 0xbytecodez
POST /result/{jobId}
    -header: ethAddress
    -postBody {fitness, workCredits, seed}
